// bubble sort   ascending order 
function shuffleArray(array) {
  for (let i = 0; i < array.length; i++) {
    const j = Math.floor(Math.random() * (i + 1));

    [array[i], array[j]] = [array[j], array[i]];
  }

  return array;
}

let myArr = [
  945, 346, 782, 195, 543, 875, 321, 674, 289, 457, 623, 817, 134, 569, 902,
  438, 701, 256, 390, 948, 574, 812, 639, 385, 129, 467, 905, 312, 786, 541,
  978, 243, 675, 819, 564, 207, 931, 486, 729, 365, 812, 549, 273, 918, 654,
  390, 146, 572, 809, 345, 921, 738, 264, 509, 876, 123, 467, 982, 635, 401,
  874, 218, 953, 607, 241, 569, 825, 473, 194, 836, 512, 359, 798, 205, 641,
  927, 384, 719, 856, 203, 549, 813, 267, 594, 142, 586, 921, 357, 780, 249,
  693, 482, 917, 365, 724, 139, 576, 823, 467, 905,
];

let givenArr = shuffleArray(myArr);

//  let givenArr = [
//   123, 129, 134, 139, 142, 146, 194, 195, 203, 205, 207,
//   218, 241, 243, 249, 256, 264, 267, 273, 289, 312, 321,
//   345, 346, 357, 359, 365, 366, 384, 385, 390, 390, 401,
//   438, 457, 467, 468, 469, 473, 482, 486, 509, 512, 541,
//   543, 549, 550, 564, 569, 570, 572, 574, 576, 586, 594,
//   607, 623, 635, 639, 641, 654, 674, 675, 693, 701, 719,
//   724, 729, 738, 780, 782, 786, 798, 809, 811, 812, 813,
//   817, 819, 823, 825, 836, 856, 874, 875, 876, 902, 905,
//   905, 917, 918, 921, 922, 927, 931, 945, 948, 953, 978,
//   982
// ]

// let givenArr =[
//     982, 978, 953, 948, 945, 931, 927, 921, 920, 918, 917,
//     905, 904, 902, 876, 875, 874, 856, 836, 825, 823, 819,
//     817, 813, 812, 810, 809, 798, 786, 782, 780, 738, 729,
//     724, 719, 701, 693, 675, 674, 654, 641, 639, 635, 623,
//     607, 594, 586, 576, 574, 572, 569, 568, 564, 549, 548,
//     543, 541, 512, 509, 486, 482, 473, 467, 466, 465, 457,
//     438, 401, 390, 389, 385, 384, 365, 364, 359, 357, 346,
//     345, 321, 312, 289, 273, 267, 264, 256, 249, 243, 241,
//     218, 207, 205, 203, 195, 194, 146, 142, 139, 134, 129,
//     123
//   ]

// let givenArr = [5, 4, 3, 2, 1];
let n = givenArr.length;
let loop = 0;
let operations = 0;
let conNotSatisfy = 0;

for (let i = 0; i < n-1 ; i++) {
  for (let j = 0; j < n-i-1 ; j++) {
    loop++;
    if (givenArr[j] > givenArr[j + 1]) {
      let temp = givenArr[j];

      givenArr[j] = givenArr[j + 1];
      givenArr[j + 1] = temp;

      operations++;
    } else {
      conNotSatisfy++;
    }
  }
}


console.log(givenArr);
console.log(`loop runs : ${loop} times`);
console.log(`succesfull operations: ${operations} times`);
console.log(`condition not satisfied: ${conNotSatisfy} times`);
